package com.skillstorm.typecast;

import java.util.Arrays;

public class arithmeticPractice {

		public static void main (String[] args) {
			
			// This practice is to verify my hand-written work
			
			// Starting with USING REMAINDER OPERATOR section
			
			// I am creating an array to output the results of the equations in order
			
			double remainder1 = (5 + 7 % 6);
			double remainder2 = (12 % 6);
			double remainder3 = (6 % 12);
			double remainder4 = (3 % 5);
			double remainder5 = (5 % 3);
			double remainder6 = (5 % 5);
			double remainder7 = (1 % -2);
			double remainder8 = (-1 % 2);
			double remainder9 = (-1 % -2);
			double remainder10 = (0 % 2);
			// cannot modulus 0 in java, so this is omitted
			// double remainder11 = (2 % 0); 
			double remainder12 = (6 * 2 % 6); 
			double remainder13 = (12 % 4); 
			double remainder14 = (7 % 3 % 2);
			
			double[] remainders = new double[]{remainder1, remainder2, remainder3, remainder4, remainder5, 
					remainder6, remainder7, remainder8, remainder9, remainder10, remainder12, remainder13,
					remainder14};
			
			System.out.print(
					"Solution to 1 is: " + remainder1 + ", while my answer was 6."
					+ "\nSolution to 2 is: " + remainder2 + " My answer was 0."
					+ "\nSolution to 3 is: " + remainder3 + " My answer was 6."
					+ "\nSolution to 4 is: " + remainder4 + " My answer was 3."
					+ "\nSolution to 5 is: " + remainder5 + " My answer was 2."
					+ "\nSolution to 6 is: " + remainder6 + " My answer was 0."
					+ "\nSolution to 7 is: " + remainder7 + " My answer was 1."
					+ "\nSolution to 8 is: " + remainder8 + " My answer was -1."
					+ "\nSolution to 9 is: " + remainder9 + " My answer was -1."
					+ "\nSolution to 10 is: " + remainder10 + " My answer was 0."
					+ "\nSolution to 11 is null, as you cannot modulus zero." + " This was not my answer." 
					+ "\nSolution to 12 is: " + remainder12 + " My answer was 0."
					+ "\nSolution to 13 is: " + remainder13 + " My answer was 0."
					+ "\nSolution to 14 is: " + remainder14 + " This was not my answer."
					);
			System.out.print(Arrays.toString(remainders));
			
			
			
//			int order1 = (10 - 12 * 2);
//			int order2 = (5 * (3 - 2)); 
//			int order3 = (5 + 2 * 3);
//			int order4 = (7 + 2 * 3 / 5 - 1);
//			int order5 = (18 / 3 % 7 * (4 + 1));
//			int intArith1 = (15 / 3 / 5); 
//			int intArith2 = (1 / 2); 
//			int intArith3 = (3 / 4);
//			int intArith4 = (4 / 3);
//			int intArith5 = (Integer.MAX_VALUE + 1);
//			int intArith6 = (Integer.MIN_VALUE - 1);
//			int intArith7 = (Integer.MAX_VALUE + Integer.MIN_VALUE);
//			int intArith8 = (Short.MAX_VALUE + 1);
//			int intArith9 = (Short.MIN_VALUE - 1); 
//			int intArith10 = (Short.MAX_VALUE + Short.MIN_VALUE); 
//			int typeCasting1 = ((int) 7.9 - 3); 
//			int typeCasting2 = ((int) 84.3 / (int) 2.8); 
//			int typeCasting3 = ((byte) 1000 - 10 ); 
//			int typeCasting4 = ((short) 100000); 
//			long typeCasting5 = ((long) 10 + (-10));
//			
//			System.out.println("All solutions for the problems: " + )
//			
//	
//			System.out.println("This was my work: 5 + 7 % 6 = 6\n" + (5+7%6));
//			2. 12 % 6 = 0
//			3.  6 % 12 = 6
//			4. 3 % 5 = 3
		}
}
